generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = "file:./dbFinal.db"
  relationMode = "prisma"
}



model User {
  id             String    @id @default(uuid())
  username       String    @unique
  password       String
  name           String
  email          String
  phoneNumber    String
  profilePicture String

  reviews        Review[]
  bookings       Booking[]

}

model Host {
  id             String @id @default(uuid())
  username       String @unique
  password       String
  name           String
  email          String
  phoneNumber    String
  profilePicture String
  aboutMe        String

listings Property[] 

}

model Property {
  id            String @id @default(uuid())
  title         String
  description   String
  location      String
  pricePerNight Decimal 
  bedroomCount  Int
  bathRoomCount Int
  maxGuestCount Int
  hostId        String 
  // rating Int

  host           Host       @relation(fields: [hostId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  amenities      Amenity[]
  bookings       Booking[]
  reviews        Review[]

@@index([hostId])
}

model Booking {
  id             String @id @default(uuid())
  userId         String 
  propertyId     String  
  checkinDate    DateTime
  checkoutDate   DateTime
  numberOfGuests Int
  totalPrice     Int
  bookingStatus  String

  user           User     @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  property       Property @relation(fields: [propertyId], references: [id], onDelete: Cascade, onUpdate: Cascade)

  @@index([userId])
  @@index([propertyId])
}


model Review {
  id         String @id @default(uuid())
  userId     String  
  propertyId String 
  rating Int
  comment    String


  user       User     @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  property   Property @relation(fields: [propertyId], references: [id], onDelete: Cascade, onUpdate: Cascade)

  @@index([userId])
  @@index([propertyId])

}

model Amenity {
  id   String @id @default(uuid())
  name String

  properties      Property[]   
 
}

